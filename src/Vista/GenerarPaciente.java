/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package Vista;

import Modelo.Paciente;
import Persistencia.PacienteData;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author HP-PAVILION
 */
public class GenerarPaciente extends javax.swing.JInternalFrame {

     private PacienteData pacienteData;
    private DefaultTableModel tableModel;
    public GenerarPaciente() {
        initComponents();
        
        pacienteData = new PacienteData();
        tableModel = new DefaultTableModel(new String[]{"Nro", "Nombre", "Edad", "Altura", "Peso Actual", "Peso Buscado"}, 0);
        jTpaciente.setModel(tableModel);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jRtodopacientes = new javax.swing.JRadioButton();
        jRpacientealta = new javax.swing.JRadioButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTpaciente = new javax.swing.JTable();
        jRpacientebaja = new javax.swing.JRadioButton();
        jBGuardar = new javax.swing.JButton();
        jBborrar = new javax.swing.JButton();
        jBactualizar = new javax.swing.JButton();

        jLabel1.setText("Generar paciente ");

        jRtodopacientes.setText("Ver todos los pacientes");
        jRtodopacientes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRtodopacientesActionPerformed(evt);
            }
        });

        jRpacientealta.setText("Paciente de alta");
        jRpacientealta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRpacientealtaActionPerformed(evt);
            }
        });

        jTpaciente.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTpaciente);

        jRpacientebaja.setText("Paciente de baja");
        jRpacientebaja.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRpacientebajaActionPerformed(evt);
            }
        });

        jBGuardar.setText("Guardar");
        jBGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBGuardarActionPerformed(evt);
            }
        });

        jBborrar.setText("Borrar");
        jBborrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBborrarActionPerformed(evt);
            }
        });

        jBactualizar.setText("Actualizar");
        jBactualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBactualizarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(147, 147, 147)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jRtodopacientes)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jRpacientealta)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jRpacientebaja))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(jBGuardar)
                        .addGap(48, 48, 48)
                        .addComponent(jBborrar)
                        .addGap(51, 51, 51)
                        .addComponent(jBactualizar))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(12, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRtodopacientes)
                    .addComponent(jRpacientealta)
                    .addComponent(jRpacientebaja))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBGuardar)
                    .addComponent(jBborrar)
                    .addComponent(jBactualizar))
                .addGap(21, 21, 21))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jRtodopacientesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRtodopacientesActionPerformed
        cargarPacientes("todos");
    }//GEN-LAST:event_jRtodopacientesActionPerformed

    private void jRpacientealtaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRpacientealtaActionPerformed
        cargarPacientes("altas");
    }//GEN-LAST:event_jRpacientealtaActionPerformed

    private void jRpacientebajaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRpacientebajaActionPerformed
        cargarPacientes("bajas");
    }//GEN-LAST:event_jRpacientebajaActionPerformed

    private void jBborrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBborrarActionPerformed
        int filaSeleccionada = jTpaciente.getSelectedRow();
        if (filaSeleccionada != -1) {
            int nroPaciente = (Integer) tableModel.getValueAt(filaSeleccionada, 0);
            pacienteData.borrarPaciente(nroPaciente);
            JOptionPane.showMessageDialog(this, "Paciente eliminado.");
            cargarPacientes("todos"); 
        } else {
            JOptionPane.showMessageDialog(this, "Por favor, seleccione un paciente a eliminar.");
        }
    }//GEN-LAST:event_jBborrarActionPerformed

    private void jBactualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBactualizarActionPerformed
int filaSeleccionada = jTpaciente.getSelectedRow();
        if (filaSeleccionada != -1) {
            int nroPaciente = (Integer) tableModel.getValueAt(filaSeleccionada, 0);
            Paciente paciente = pacienteData.buscarPaciente(nroPaciente);

            // Mostrar formulario de actualizaci√≥n
            paciente.setNombre(JOptionPane.showInputDialog("Ingrese el nombre:", paciente.getNombre()));
            paciente.setEdad(Integer.parseInt(JOptionPane.showInputDialog("Ingrese la edad:", paciente.getEdad())));
            paciente.setAltura(Float.parseFloat(JOptionPane.showInputDialog("Ingrese la altura:", paciente.getAltura())));
            paciente.setPesoActual(Float.parseFloat(JOptionPane.showInputDialog("Ingrese el peso actual:", paciente.getPesoActual())));
            paciente.setPesoBuscado(Float.parseFloat(JOptionPane.showInputDialog("Ingrese el peso buscado:", paciente.getPesoBuscado())));
            
            pacienteData.actualizarPaciente(paciente);
            JOptionPane.showMessageDialog(this, "Paciente actualizado.");
            cargarPacientes("todos"); 
        } else {
            JOptionPane.showMessageDialog(this, "Por favor, seleccione un paciente a actualizar.");
        }

    }//GEN-LAST:event_jBactualizarActionPerformed

    private void jBGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBGuardarActionPerformed
     Paciente paciente = new Paciente();
        paciente.setNombre(JOptionPane.showInputDialog("Ingrese el nombre:"));
        paciente.setEdad(Integer.parseInt(JOptionPane.showInputDialog("Ingrese la edad:")));
        paciente.setAltura(Float.parseFloat(JOptionPane.showInputDialog("Ingrese la altura:")));
        paciente.setPesoActual(Float.parseFloat(JOptionPane.showInputDialog("Ingrese el peso actual:")));
        paciente.setPesoBuscado(Float.parseFloat(JOptionPane.showInputDialog("Ingrese el peso buscado:")));
        
        pacienteData.guardarPaciente(paciente);
        JOptionPane.showMessageDialog(this, "Paciente guardado.");
        cargarPacientes("todos"); 
    }//GEN-LAST:event_jBGuardarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBGuardar;
    private javax.swing.JButton jBactualizar;
    private javax.swing.JButton jBborrar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JRadioButton jRpacientealta;
    private javax.swing.JRadioButton jRpacientebaja;
    private javax.swing.JRadioButton jRtodopacientes;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTpaciente;
    // End of variables declaration//GEN-END:variables

    private void cargarPacientes(String estado) {
        tableModel.setRowCount(0); 
        List<Paciente> pacientes;

        switch (estado) {
            case "altas":
                pacientes = pacienteData.listarPacientesAltas();
                break;
            case "bajas":
                pacientes = pacienteData.listarPacientesBajas();
                break;
            case "todos":
            default:
                pacientes = pacienteData.listarPacientes();
                break;
        }

        for (Paciente p : pacientes) {
            tableModel.addRow(new Object[]{p.getNroPaciente(), p.getNombre(), p.getEdad(), p.getAltura(), p.getPesoActual(), p.getPesoBuscado()});
        }
}
}
    

